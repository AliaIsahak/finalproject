# -*- coding: utf-8 -*-
"""Final Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O9XjS7ypCBOHWu0gpL0K5KF2-rwb8UaV
"""

#Importing the libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

print(dataset = pd.read_csv("winequality-white.csv", sep = ';'))

print("Duplicated entries exist: " + dataset.duplicated().any())

dataset.loc[dataset.duplicated(keep='first'), :]

data1 = dataset.drop_duplicates()
print(data1)

data1.describe()

"""Visualisation

"""

data1.hist(bins=25,figsize=(10,10))
# display histogram
plt.show()

plt.figure(figsize=[10,6])
# plot bar graph
plt.bar(data1['quality'],data1['alcohol'])
# label x-axis
plt.xlabel('quality')
#label y-axis
plt.ylabel('alcohol')
plt.show()

"""Correlation"""

# ploting heatmap
plt.figure(figsize=[19,10])
sns.heatmap(data1.corr(),annot=True)
plt.show()

for a in range(len(data1.corr().columns)):
    for b in range(a):
        if abs(data1.corr().iloc[a,b]) >0.7:
            name = data1.corr().columns[a]
            print(name)

new_df=data1.drop('density',axis=1)

new_df.shape

"""Splitting Dataset"""

from sklearn.model_selection import train_test_split
y=new_df.quality
x=new_df.drop('quality',axis=1)
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=40)

"""####Normalisation"""

#importing module
from sklearn.preprocessing import MinMaxScaler
# creating normalization object 
norm = MinMaxScaler()
# fit data
norm_fit = norm.fit(x_train)
new_xtrain = norm_fit.transform(x_train)
new_xtest = norm_fit.transform(x_test)
# display values
print(new_xtrain)

"""####Applying Model

"""
